from fastapi import APIRouter

from src.config import SELECTED_MODEL, SUMM_MODELS_FILEPATHS
from src.dependencies import SessionDep
from src.services.news_service import del_cluster_in_news, del_news_by_cluster

admin_router = APIRouter(prefix="/admin", tags=["–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ ü§ñ"])


@admin_router.delete("/{cluster_n}", summary="–£–¥–∞–ª–∏—Ç—å –∫–ª–∞—Å—Ç–µ—Ä")
async def del_cluster(
        cluster_n: int,
        session: SessionDep
) -> dict:
    await del_cluster_in_news(session, cluster_n)

    return {"status": "OK", "message": "–ö–ª–∞—Å—Ç–µ—Ä —É–¥–∞–ª–µ–Ω"}

@admin_router.post("/summaries/{cluster_n}", summary="–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π —Ä–µ—Ñ–µ—Ä–∞—Ç –¥–ª—è –∫–ª–∞—Å—Ç–µ—Ä–∞")
async def generate_new_summary(
        cluster_n: int,
        session: SessionDep
) -> dict:
    await del_cluster_in_news(session, cluster_n)

    return {"status": "OK", "message": "–ö–ª–∞—Å—Ç–µ—Ä —É–¥–∞–ª–µ–Ω"}


@admin_router.delete("/news/{cluster_n}", summary="–£–¥–∞–ª–∏—Ç—å –∫–ª–∞—Å—Ç–µ—Ä –∏ –≤—Å–µ –Ω–æ–≤–æ—Å—Ç–∏")
async def del_cluster_w_news(
        cluster_n: int,
        session: SessionDep
) -> dict:
    await del_news_by_cluster(session, cluster_n)

    return {"status": "OK", "message": "–ö–ª–∞—Å—Ç–µ—Ä –∏ –Ω–æ–≤–æ—Å—Ç–∏ —É–¥–∞–ª–µ–Ω—ã"}


@admin_router.get("/models", summary="–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π")
def get_available_models() -> dict:
    return {"available_models": SUMM_MODELS_FILEPATHS.keys()}


@admin_router.get("/models/selected", summary="–ü–æ–ª—É—á–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –º–æ–¥–µ–ª–∏")
def get_selected_model() -> dict:
    return {"selected_model": SELECTED_MODEL}


@admin_router.post("/models/selected", summary="–í—ã–±—Ä–∞—Ç—å –º–æ–¥–µ–ª—å")
def set_model(model_name: str) -> dict:
    if SUMM_MODELS_FILEPATHS.get(model_name):
       SELECTED_MODEL = model_name
       return {"status": "OK", "message": "–ú–æ–¥–µ–ª—å —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞"}

    return {"status": "ERROR", "message": "–¢–∞–∫–æ–π –º–æ–¥–µ–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"}
